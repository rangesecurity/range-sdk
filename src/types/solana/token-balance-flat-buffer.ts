// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { UITokenAmountFlatBuffer } from '../solana/uitoken-amount-flat-buffer.js';


export class TokenBalanceFlatBuffer {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TokenBalanceFlatBuffer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTokenBalanceFlatBuffer(bb:flatbuffers.ByteBuffer, obj?:TokenBalanceFlatBuffer):TokenBalanceFlatBuffer {
  return (obj || new TokenBalanceFlatBuffer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTokenBalanceFlatBuffer(bb:flatbuffers.ByteBuffer, obj?:TokenBalanceFlatBuffer):TokenBalanceFlatBuffer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TokenBalanceFlatBuffer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

mint():string|null
mint(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
mint(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

owner():string|null
owner(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
owner(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

programId():string|null
programId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
programId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

accountIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

uiTokenAmount(obj?:UITokenAmountFlatBuffer):UITokenAmountFlatBuffer|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new UITokenAmountFlatBuffer()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startTokenBalanceFlatBuffer(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addMint(builder:flatbuffers.Builder, mintOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, mintOffset, 0);
}

static addOwner(builder:flatbuffers.Builder, ownerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, ownerOffset, 0);
}

static addProgramId(builder:flatbuffers.Builder, programIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, programIdOffset, 0);
}

static addAccountIndex(builder:flatbuffers.Builder, accountIndex:number) {
  builder.addFieldInt32(3, accountIndex, 0);
}

static addUiTokenAmount(builder:flatbuffers.Builder, uiTokenAmountOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, uiTokenAmountOffset, 0);
}

static endTokenBalanceFlatBuffer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 12) // uiTokenAmount
  return offset;
}

}
