// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class InstructionErrorArrayObjFlatBuffer {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(
    i: number,
    bb: flatbuffers.ByteBuffer,
  ): InstructionErrorArrayObjFlatBuffer {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsInstructionErrorArrayObjFlatBuffer(
    bb: flatbuffers.ByteBuffer,
    obj?: InstructionErrorArrayObjFlatBuffer,
  ): InstructionErrorArrayObjFlatBuffer {
    return (obj || new InstructionErrorArrayObjFlatBuffer()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  static getSizePrefixedRootAsInstructionErrorArrayObjFlatBuffer(
    bb: flatbuffers.ByteBuffer,
    obj?: InstructionErrorArrayObjFlatBuffer,
  ): InstructionErrorArrayObjFlatBuffer {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new InstructionErrorArrayObjFlatBuffer()).__init(
      bb.readInt32(bb.position()) + bb.position(),
      bb,
    );
  }

  custom(): number {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
  }

  static startInstructionErrorArrayObjFlatBuffer(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addCustom(builder: flatbuffers.Builder, custom: number) {
    builder.addFieldInt32(0, custom, 0);
  }

  static endInstructionErrorArrayObjFlatBuffer(
    builder: flatbuffers.Builder,
  ): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createInstructionErrorArrayObjFlatBuffer(
    builder: flatbuffers.Builder,
    custom: number,
  ): flatbuffers.Offset {
    InstructionErrorArrayObjFlatBuffer.startInstructionErrorArrayObjFlatBuffer(
      builder,
    );
    InstructionErrorArrayObjFlatBuffer.addCustom(builder, custom);
    return InstructionErrorArrayObjFlatBuffer.endInstructionErrorArrayObjFlatBuffer(
      builder,
    );
  }
}
